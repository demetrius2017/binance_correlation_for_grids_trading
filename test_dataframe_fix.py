"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —Å–µ—Äializ–∞—Ü–∏–∏ DataFrame –≤ Streamlit
"""
import pandas as pd
import numpy as np

def test_dataframe_serialization():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ DataFrame –∫–∞–∫ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º app.py
    """
    print("=== –¢–µ—Å—Ç —Å–µ—Äializ–∞—Ü–∏–∏ DataFrame ===")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–º—É–ª—è—Ü–∏–∏ Grid Trading
    result = {
        'combined_pct': 5.25,
        'long_pct': 2.75,
        'short_pct': 2.50,
        'total_trades': 45,
        'lightning_count': 3,
        'stop_loss_count': 1,
        'long_active': True,
        'short_active': True,
        'grid_step_pct': 1.2
    }
    
    timeframe_choice = "1h"
    period_days = 30
    
    # –°–æ–∑–¥–∞–µ–º DataFrame –∫–∞–∫ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º –∫–æ–¥–µ
    results_df = pd.DataFrame({
        '–ú–µ—Ç—Ä–∏–∫–∞': [
            '–û–±—â–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (%)',
            'Long –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (%)',
            'Short –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (%)',
            '–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫',
            '–ú–æ–ª–Ω–∏–π',
            '–°—Ç–æ–ø-–ª–æ—Å—Å–æ–≤',
            'Long –∞–∫—Ç–∏–≤–Ω–∞',
            'Short –∞–∫—Ç–∏–≤–Ω–∞',
            '–®–∞–≥ —Å–µ—Ç–∫–∏ (%)',
            '–¢–∞–π–º—Ñ—Ä–µ–π–º',
            '–ü–µ—Ä–∏–æ–¥ (–¥–Ω–µ–π)'
        ],
        '–ó–Ω–∞—á–µ–Ω–∏–µ': [
            f"{result['combined_pct']:.2f}",
            f"{result['long_pct']:.2f}",
            f"{result['short_pct']:.2f}",
            str(result['total_trades']),           # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –∫ —Å—Ç—Ä–æ–∫–µ
            str(result['lightning_count']),       # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –∫ —Å—Ç—Ä–æ–∫–µ
            str(result['stop_loss_count']),       # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –∫ —Å—Ç—Ä–æ–∫–µ
            "–î–∞" if result['long_active'] else "–ù–µ—Ç",
            "–î–∞" if result['short_active'] else "–ù–µ—Ç",
            f"{result['grid_step_pct']:.2f}",
            str(timeframe_choice),                # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –∫ —Å—Ç—Ä–æ–∫–µ
            str(period_days)                      # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –∫ —Å—Ç—Ä–æ–∫–µ
        ]
    })
    
    print("DataFrame —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:")
    print(results_df)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
    print("–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–ª–æ–Ω–∫–∞—Ö:")
    print(results_df.dtypes)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–ª–æ–Ω–∫–µ '–ó–Ω–∞—á–µ–Ω–∏–µ' - —Å—Ç—Ä–æ–∫–∏
    all_strings = all(isinstance(val, str) for val in results_df['–ó–Ω–∞—á–µ–Ω–∏–µ'])
    print(f"–í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–ª–æ–Ω–∫–µ '–ó–Ω–∞—á–µ–Ω–∏–µ' - —Å—Ç—Ä–æ–∫–∏: {'‚úÖ' if all_strings else '‚ùå'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    print("\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π:")
    print(f"–®–∞–≥ —Å–µ—Ç–∫–∏: '{results_df.iloc[8]['–ó–Ω–∞—á–µ–Ω–∏–µ']}' (—Ç–∏–ø: {type(results_df.iloc[8]['–ó–Ω–∞—á–µ–Ω–∏–µ'])})")
    print(f"–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: '{results_df.iloc[3]['–ó–Ω–∞—á–µ–Ω–∏–µ']}' (—Ç–∏–ø: {type(results_df.iloc[3]['–ó–Ω–∞—á–µ–Ω–∏–µ'])})")
    print(f"–¢–∞–π–º—Ñ—Ä–µ–π–º: '{results_df.iloc[9]['–ó–Ω–∞—á–µ–Ω–∏–µ']}' (—Ç–∏–ø: {type(results_df.iloc[9]['–ó–Ω–∞—á–µ–Ω–∏–µ'])})")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Arrow (–∫–∞–∫ –¥–µ–ª–∞–µ—Ç Streamlit)
    try:
        import pyarrow as pa
        table = pa.Table.from_pandas(results_df)
        print("\n‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ Arrow Table —É—Å–ø–µ—à–Ω–∞ - DataFrame —Å–æ–≤–º–µ—Å—Ç–∏–º —Å Streamlit")
        return True
    except ImportError:
        print("\n‚ö†Ô∏è PyArrow –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ Arrow Table: {e}")
        return False

if __name__ == "__main__":
    success = test_dataframe_serialization()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ! –û—à–∏–±–∫–∞ —Å–µ—Äializ–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    else:
        print("\nüí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –¢—Ä–µ–±—É—é—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
