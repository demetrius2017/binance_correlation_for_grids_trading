"""
–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø–µ—Ä–µ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–µ—Ç–∫–∏ —Å –æ—Å—Ç–∞–≤—à–∏–º—Å—è –±–∞–ª–∞–Ω—Å–æ–º
"""

def test_grid_reset_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–µ—Ç–∫–∏ —Å —É—á–µ—Ç–æ–º –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –±–∞–ª–∞–Ω—Å–∞"""
    
    print("=== –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ü–ï–†–ï–°–¢–†–û–ï–ù–ò–Ø –°–ï–¢–ö–ò ===\n")
    
    # –ù–∞—á–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    initial_balance = 1000.0
    grid_step_pct = 2.0
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–∏—Ç—É–∞—Ü–∏—é –¥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
    print("üìä –ò–ó–ù–ê–ß–ê–õ–¨–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø:")
    num_levels = int(20.0 / grid_step_pct)  # 20% –¥–∏–∞–ø–∞–∑–æ–Ω / 2% —à–∞–≥ = 10 —É—Ä–æ–≤–Ω–µ–π
    final_order_size = initial_balance / num_levels  # $1000 / 10 = $100 –∑–∞ –æ—Ä–¥–µ—Ä
    
    print(f"   ‚Ä¢ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${initial_balance:.2f}")
    print(f"   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π: {num_levels}")
    print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä –æ—Ä–¥–µ—Ä–∞: ${final_order_size:.2f}")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ (–ø–æ—Ç–µ—Ä—è 30% –±–∞–ª–∞–Ω—Å–∞)
    print("\nüî• –°–†–ê–ë–ê–¢–´–í–ê–ù–ò–ï –°–¢–û–ü-–õ–û–°–°–ê:")
    balance_after_stop_loss = initial_balance * 0.7  # –û—Å—Ç–∞–ª–æ—Å—å 70% –æ—Ç –±–∞–ª–∞–Ω—Å–∞
    print(f"   ‚Ä¢ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞: ${balance_after_stop_loss:.2f}")
    print(f"   ‚Ä¢ –ü–æ—Ç–µ—Ä—è–Ω–æ: ${initial_balance - balance_after_stop_loss:.2f} ({((initial_balance - balance_after_stop_loss) / initial_balance * 100):.1f}%)")
    
    # –°–¢–ê–†–ê–Ø –õ–û–ì–ò–ö–ê (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è)
    print("\n‚ùå –°–¢–ê–†–ê–Ø –õ–û–ì–ò–ö–ê (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è):")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ—Ä–¥–µ—Ä–∞: $100.00")
    print("   ‚Ä¢ –ü—Ä–∏ –±–∞–ª–∞–Ω—Å–µ $700 –º–æ–∂–Ω–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ 7 –æ—Ä–¥–µ—Ä–æ–≤")
    print("   ‚Ä¢ –ù–û –ª–æ–≥–∏–∫–∞ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—ã—Ç–∞–µ—Ç—Å—è —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å 10 –æ—Ä–¥–µ—Ä–æ–≤!")
    print("   ‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ –º–µ–ª–∫–∏–µ –æ—Ä–¥–µ—Ä–∞")
    
    # –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê (–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è)
    print("\n‚úÖ –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê (–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è):")
    if balance_after_stop_loss > 0 and final_order_size > 0:
        num_levels_new = max(1, int(balance_after_stop_loss / final_order_size))
        final_order_size_new = balance_after_stop_loss / num_levels_new
        
        print(f"   ‚Ä¢ –ü–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π: {num_levels_new}")
        print(f"   ‚Ä¢ –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä –æ—Ä–¥–µ—Ä–∞: ${final_order_size_new:.2f}")
        print(f"   ‚Ä¢ –û–±—â–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –±–∞–ª–∞–Ω—Å: ${num_levels_new * final_order_size_new:.2f}")
        print(f"   ‚Ä¢ –†–µ–∑–µ—Ä–≤: ${balance_after_stop_loss - (num_levels_new * final_order_size_new):.2f}")
    
    print("\nüéØ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ù–û–í–û–ô –õ–û–ì–ò–ö–ò:")
    print("   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–µ—Å—å –¥–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å")
    print("   ‚úÖ –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –æ—Ä–¥–µ—Ä–æ–≤")
    print("   ‚úÖ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π")
    print("   ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –ø–æ—Ç–µ—Ä—å
    print("\nüìà –¢–ï–°–¢ –° –†–ê–ó–ù–´–ú–ò –£–†–û–í–ù–Ø–ú–ò –ü–û–¢–ï–†–¨:")
    for loss_pct in [10, 30, 50, 70, 90]:
        remaining_balance = initial_balance * (1 - loss_pct / 100)
        if remaining_balance > 0:
            num_levels_test = max(1, int(remaining_balance / final_order_size))
            order_size_test = remaining_balance / num_levels_test
            print(f"   ‚Ä¢ –ü–æ—Ç–µ—Ä—è {loss_pct:2d}%: –±–∞–ª–∞–Ω—Å ${remaining_balance:6.2f} ‚Üí {num_levels_test:2d} —É—Ä–æ–≤–Ω–µ–π √ó ${order_size_test:6.2f}")
        else:
            print(f"   ‚Ä¢ –ü–æ—Ç–µ—Ä—è {loss_pct:2d}%: —Ç–æ—Ä–≥–æ–≤–ª—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

if __name__ == "__main__":
    test_grid_reset_logic()
