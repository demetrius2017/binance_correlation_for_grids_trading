#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤—ã—à–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–∏–º—É–ª—è—Ü–∏–∏ Grid Trading
"""

import pandas as pd
import numpy as np
from modules.grid_analyzer import GridAnalyzer
from modules.collector import BinanceDataCollector

def analyze_simulation_logic():
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â—É—é –ª–æ–≥–∏–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –≥–¥–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–≤—ã—à–µ–Ω–∏—è
    """
    print("=== –ê–ù–ê–õ–ò–ó –õ–û–ì–ò–ö–ò –°–ò–ú–£–õ–Ø–¶–ò–ò GRID TRADING ===")
    print()
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ CSV
    grid_step = 0.30
    maker_commission = 0.02
    taker_commission = 0.05
    
    print("–¢–ï–ö–£–©–ê–Ø –õ–û–ì–ò–ö–ê –†–ê–°–ß–ï–¢–û–í:")
    print("-" * 50)
    print(f"–®–∞–≥ —Å–µ—Ç–∫–∏: {grid_step}%")
    print(f"Maker –∫–æ–º–∏—Å—Å–∏—è: {maker_commission}%")
    print(f"Taker –∫–æ–º–∏—Å—Å–∏—è: {taker_commission}%")
    print()
    
    # –ü—Ä–æ—Ñ–∏—Ç —Å –æ–¥–Ω–æ–π maker —Å–¥–µ–ª–∫–∏
    maker_profit_per_trade = grid_step - maker_commission
    print(f"–ü—Ä–æ—Ñ–∏—Ç —Å –æ–¥–Ω–æ–π maker —Å–¥–µ–ª–∫–∏: {maker_profit_per_trade:.3f}%")
    print()
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ CSV
    total_trades = 6327
    total_profit = 1099.31
    avg_profit_per_trade = total_profit / total_trades
    
    print("–ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ò–ó CSV:")
    print("-" * 40)
    print(f"–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: {total_trades}")
    print(f"–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: {total_profit:.2f}%")
    print(f"–°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–¥–µ–ª–∫—É: {avg_profit_per_trade:.4f}%")
    print(f"–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞–∫—Å–∏–º—É–º (maker): {maker_profit_per_trade:.3f}%")
    print()
    
    if avg_profit_per_trade > maker_profit_per_trade:
        print("üö® –ü–†–û–ë–õ–ï–ú–ê: –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–¥–µ–ª–∫—É –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞–∫—Å–∏–º—É–º!")
        print("   –≠—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∏–∫–µ —Ä–∞—Å—á–µ—Ç–æ–≤.")
    else:
        print("‚úÖ –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–¥–µ–ª–∫—É –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã.")
    print()
    
    # –ü—Ä–æ–±–ª–µ–º—ã –≤ –ª–æ–≥–∏–∫–µ
    print("–í–´–Ø–í–õ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ –í –õ–û–ì–ò–ö–ï:")
    print("-" * 40)
    print("1. üö® –û–¢–°–£–¢–°–¢–í–ò–ï –†–ï–ê–õ–¨–ù–´–• –£–ë–´–¢–ö–û–í –û–¢ –°–¢–û–ü-–õ–û–°–°–û–í")
    print("   - –ü—Ä–∏ —Å—Ç–æ–ø-–ª–æ—Å—Å–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–º–∏—Å—Å–∏—è")
    print("   - –ù–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–π —É–±—ã—Ç–æ–∫ –æ—Ç –¥–≤–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã")
    print("   - –ü—Ä–∏–º–µ—Ä: –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –Ω–∞ 7% —É–±—ã—Ç–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å ~7%, –∞ –Ω–µ 0.05%")
    print()
    
    print("2. üö® –ù–ï–†–ï–ê–õ–ò–°–¢–ò–ß–ù–û–ï –ü–û–ö–†–´–¢–ò–ï –£–ë–´–¢–ö–û–í")
    print("   - –û–¥–Ω–∞ —Å–µ—Ç–∫–∞ '–∫–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç' —É–±—ã—Ç–∫–∏ –¥—Ä—É–≥–æ–π")
    print("   - –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–∞—è —Å–µ—Ç–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ")
    print("   - coverage_amount –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ –ø—Ä–∏–±—ã–ª–∏ –±–µ–∑ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è")
    print()
    
    print("3. üö® –ó–ê–í–´–®–ï–ù–ù–ê–Ø –ü–†–ò–ë–´–õ–¨ –û–¢ –¢–ï–ù–ï–ô")
    print("   - –ö–∞–∂–¥–∞—è —Ç–µ–Ω—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –ø–æ–ª–Ω—ã–π grid_step - commission")
    print("   - –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ –≤—Å–µ –¥–≤–∏–∂–µ–Ω–∏—è –ø—Ä–∏–≤–æ–¥—è—Ç –∫ —Å–¥–µ–ª–∫–∞–º")
    print("   - –ù–µ—Ç —É—á–µ—Ç–∞ –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è –∏ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏")
    print()
    
    print("4. üö® –ù–ê–ö–û–ü–ò–¢–ï–õ–¨–ù–´–ô –≠–§–§–ï–ö–¢")
    print("   - –ü—Ä–∏ —à–∞–≥–µ 0.3% –∏ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–≤–µ—á–µ–π")
    print("   - –ü—Ä–∏–±—ã–ª—å –Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç—Å—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö —É–±—ã—Ç–∫–æ–≤")
    print("   - –ó–∞ 90 –¥–Ω–µ–π —ç—Ç–æ –¥–∞–µ—Ç –Ω–µ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
    print()

def calculate_realistic_example():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –¥–æ–ª–∂–Ω—ã –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã
    """
    print("=== –†–ï–ê–õ–ò–°–¢–ò–ß–ù–´–ô –ü–†–ò–ú–ï–† –†–ê–°–ß–ï–¢–û–í ===")
    print()
    
    # –ü—Ä–∏–º–µ—Ä –æ–¥–Ω–æ–π —Å–≤–µ—á–∏ —Å —Ç–µ–Ω—è–º–∏
    grid_step = 0.30
    maker_commission = 0.02
    taker_commission = 0.05
    stop_loss_pct = 5.0
    
    print("–ü–†–ò–ú–ï–† –°–í–ï–ß–ò:")
    print(f"Open: $1.000, High: $1.012, Low: $0.988, Close: $1.008")
    
    upper_wick = (1.012 - 1.008) / 1.008 * 100  # 0.4%
    lower_wick = (1.000 - 0.988) / 0.988 * 100  # 1.2%
    body = (1.008 - 1.000) / 1.000 * 100       # 0.8%
    
    print(f"–í–µ—Ä—Ö–Ω—è—è —Ç–µ–Ω—å: {upper_wick:.2f}%")
    print(f"–ù–∏–∂–Ω—è—è —Ç–µ–Ω—å: {lower_wick:.2f}%")
    print(f"–¢–µ–ª–æ —Å–≤–µ—á–∏: {body:.2f}%")
    print()
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫
    upper_trades = int(upper_wick / grid_step)  # 1 —Å–¥–µ–ª–∫–∞
    lower_trades = int(lower_wick / grid_step)  # 4 —Å–¥–µ–ª–∫–∏
    body_trades = int(body / grid_step)         # 2 —Å–¥–µ–ª–∫–∏
    
    print("–¢–ï–ö–£–©–ê–Ø –õ–û–ì–ò–ö–ê (–ó–ê–í–´–®–ï–ù–ù–ê–Ø):")
    print(f"–°–¥–µ–ª–∫–∏ –≤ –≤–µ—Ä—Ö–Ω–µ–π —Ç–µ–Ω–∏: {upper_trades}")
    print(f"–°–¥–µ–ª–∫–∏ –≤ –Ω–∏–∂–Ω–µ–π —Ç–µ–Ω–∏: {lower_trades}")
    print(f"–°–¥–µ–ª–∫–∏ –≤ —Ç–µ–ª–µ: {body_trades}")
    
    # –¢–µ–∫—É—â–∏–π —Ä–∞—Å—á–µ—Ç –ø—Ä–∏–±—ã–ª–∏
    current_profit = (upper_trades + lower_trades) * (grid_step - maker_commission)
    print(f"–ü—Ä–∏–±—ã–ª—å –æ—Ç —Ç–µ–Ω–µ–π: {current_profit:.3f}%")
    print(f"–£–±—ã—Ç–æ–∫ –æ—Ç —Ç–µ–ª–∞: {body_trades * taker_commission:.3f}% (—Ç–æ–ª—å–∫–æ –∫–æ–º–∏—Å—Å–∏—è)")
    print(f"–ò—Ç–æ–≥–æ –ø–æ —Å–≤–µ—á–µ: {current_profit - body_trades * taker_commission:.3f}%")
    print()
    
    print("–†–ï–ê–õ–ò–°–¢–ò–ß–ù–ê–Ø –õ–û–ì–ò–ö–ê:")
    print("- –ù–µ –≤—Å–µ –¥–≤–∏–∂–µ–Ω–∏—è –≤ —Ç–µ–Ω—è—Ö –ø—Ä–∏–≤–æ–¥—è—Ç –∫ —Å–¥–µ–ª–∫–∞–º")
    print("- –°—Ç–æ–ø-–ª–æ—Å—Å –¥–æ–ª–∂–µ–Ω —É—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —É–±—ã—Ç–æ–∫")
    print("- –ù–µ—Ç –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è —É–±—ã—Ç–∫–æ–≤ –º–µ–∂–¥—É —Å–µ—Ç–∫–∞–º–∏")
    print("- –£—á–µ—Ç –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è –∏ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏")
    
    # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç
    realistic_wick_efficiency = 0.7  # 70% –¥–≤–∏–∂–µ–Ω–∏–π –ø—Ä–∏–≤–æ–¥—è—Ç –∫ —Å–¥–µ–ª–∫–∞–º
    realistic_profit = (upper_trades + lower_trades) * realistic_wick_efficiency * (grid_step - maker_commission)
    
    print(f"–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å –æ—Ç —Ç–µ–Ω–µ–π: {realistic_profit:.3f}%")
    print(f"–ü—Ä–∏ —Å—Ç–æ–ø-–ª–æ—Å—Å–µ —É–±—ã—Ç–æ–∫: -{body:.2f}% (—Ä–µ–∞–ª—å–Ω—ã–π —É–±—ã—Ç–æ–∫)")
    print()

def recommend_fixes():
    """
    –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ª–æ–≥–∏–∫–∏
    """
    print("=== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ ===")
    print()
    
    print("1. üîß –ò–°–ü–†–ê–í–ò–¢–¨ –õ–û–ì–ò–ö–£ –°–¢–û–ü-–õ–û–°–°–û–í")
    print("   - –ü—Ä–∏ —Å—Ç–æ–ø-–ª–æ—Å—Å–µ –≤—ã—á–∏—Ç–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —É–±—ã—Ç–æ–∫ (—Ä–∞–∑–º–µ—Ä –¥–≤–∏–∂–µ–Ω–∏—è)")
    print("   - –£–±—Ä–∞—Ç—å –Ω–µ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —É–±—ã—Ç–∫–æ–≤")
    print("   - –ü—Ä–∏–º–µ—Ä: –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –Ω–∞ 7% —É–±—ã—Ç–æ–∫ = -7%, –∞ –Ω–µ -0.05%")
    print()
    
    print("2. üîß –î–û–ë–ê–í–ò–¢–¨ –†–ï–ê–õ–ò–ó–ú –í –†–ê–°–ß–ï–¢–´")
    print("   - –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–¥–µ–ª–æ–∫ (70-80%)")
    print("   - –£—á–µ—Ç –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è (0.01-0.02%)")
    print("   - –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–æ–≤")
    print()
    
    print("3. üîß –ü–ï–†–ï–°–ú–û–¢–†–ï–¢–¨ –õ–û–ì–ò–ö–£ –ú–û–õ–ù–ò–ô")
    print("   - –ü—Ä–∏ –º–æ–ª–Ω–∏–∏ (>15% –¥–≤–∏–∂–µ–Ω–∏–µ) —É–±—ã—Ç–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–º")
    print("   - –ù–µ –ø—Ä–æ—Å—Ç–æ -2% –∑–∞ –ø–µ—Ä–µ—Å—Ç—Ä–æ–π–∫—É, –∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏")
    print()
    
    print("4. üîß –î–û–ë–ê–í–ò–¢–¨ –ü–†–û–í–ï–†–ö–ò –ó–î–†–ê–í–û–ì–û –°–ú–´–°–õ–ê")
    print("   - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –≤ –º–µ—Å—è—Ü: 5-15%")
    print("   - –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è")
    print("   - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤")
    print()
    
    print("–û–ñ–ò–î–ê–ï–ú–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("- –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∑–∞ 90 –¥–Ω–µ–π: 10-50% (–≤–º–µ—Å—Ç–æ 1099%)")
    print("- –£—á–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö —É–±—ã—Ç–∫–æ–≤ –æ—Ç —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤")
    print("- –ë–æ–ª–µ–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–µ, –Ω–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã")

if __name__ == "__main__":
    analyze_simulation_logic()
    print()
    calculate_realistic_example()
    print()
    recommend_fixes()
